const superagent  = require('superagent')
const querystring = require('querystring')
const ProgressBar = require('progress')
const asy         = require('async')

const getApiUrls  = require('./getApiUrls')
const getWeibo    = require('./getWeibo')

// milliseconds to seconds
const formatTime = (mm) => (mm / 1000).toFixed(3)

module.exports = (userId, concurrency) => 
  new Promise((resolve, reject) => {

    const start = new Date()

    let data = []

    const q = asy.queue((url, callback) => {
      getWeibo(url).then(res => {
        data = data.concat(res)
        callback()
      })
    }, concurrency) // concurrency defaulting to 5

    q.drain = () => {
      const end = new Date()
      console.log(`done in ${formatTime(end - start)} seconds`)
      resolve(data)
    }
    
    getApiUrls(userId).then(urls => {
      if (urls.length === 0) reject('no data.')
      const progressBar = new ProgressBar(
        'fetching [:bar] :percent :etas', {
          width: 20,
          total: urls.length
        })
      urls.forEach(url => 
        q.push(url, (err) => {
          progressBar.tick(1)
          if (err) console.error(err)
        }))
    })
    
  }) 